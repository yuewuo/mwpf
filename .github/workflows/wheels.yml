name: Build Python Binding

on:
  push:
    branches:
      - ci-build
    tags:
      - '**'
  # pull_request: {}

jobs: # Workflow credit to https://github.com/samuelcolvin/rtoml/blob/main/.github/workflows/ci.yml

  build_wheels:
    name: Build wheels py3.${{ matrix.python-version }} on ${{ matrix.os }} (${{ matrix.build-feature }})
    strategy:
      fail-fast: true
      # fail-fast: false
      matrix:
        os:
          - ubuntu
          - macos
          - windows
        python-version: # Yue 2022.10.9: I enabled abi3-py37 in pyo3, so everything built will be py37-abi3 which is compatible with py37+
          - '8' # use python 3.8 to build because macos universal2 requires at least python 3.8; however the result will be py37-abi3
        include:
          - os: ubuntu
            platform: linux
          - os: windows
            ls: dir
        build-feature:
          - default
          - rational  # will execute pyproject-rational.py before build
    runs-on: ${{ format('{0}-latest', matrix.os) }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3

      - name: Install LLVM and Clang (Windows)
        if: matrix.os == 'windows'
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "11.0"

      - name: Set LIBCLANG_PATH (Windows)
        if: matrix.os == 'windows'
        run: echo "LIBCLANG_PATH=${{ env.LLVM_PATH }}/lib" >> "$GITHUB_ENV"

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2024-11-03
          override: true
          
      - name: Install NodeJs
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      
      - name: Build Frontend
        working-directory: ./visualize
        run: npm install --include=dev && npm run build

      - name: Install Python dependencies
        run: python -m pip install -U setuptools wheel twine cibuildwheel pytest maturin fusion_blossom==0.2.10

      - name: run Rust test
        run: cargo test --release
        env:
          SKIP_FRONTEND_BUILD: '1'

      - name: apply patch to build different packages
        if: matrix.build-feature != 'default'
        run: python pyproject-${{ matrix.build-feature }}.py apply

      - name: Build Wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: 'cp3${{ matrix.python-version }}-*'
          CIBW_SKIP: '*-win32 *_i686' # do not build for 32bit machines, rustc seems to complain about it
          CIBW_PLATFORM: ${{ matrix.platform || matrix.os }} # only build for specific platform
          CIBW_ENVIRONMENT_MACOS: PATH="$HOME/.cargo/bin:$PATH" MACOSX_DEPLOYMENT_TARGET=10.12
          CIBW_ENVIRONMENT_WINDOWS: PATH="$UserProfile\.cargo\bin;$PATH" SKIP_FRONTEND_BUILD=1
          CIBW_ENVIRONMENT_LINUX: PATH="$HOME/.cargo/bin:$PATH" LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/rh/llvm-toolset-7.0/root/usr/lib64/ SKIP_FRONTEND_BUILD=1
          CIBW_MANYLINUX_X86_64_IMAGE: 'manylinux2014'
          CIBW_MUSLLINUX_X86_64_IMAGE: 'musllinux_1_2'
          # Yue 2022.10.17: build on aarch64 failed due to strange `cargo metadata` exited with an error:     Updating crates.io index
          CIBW_ARCHS_LINUX: x86_64 # aarch64 requires QEMU, ~ 40min for each manylinux and musllinux...
          CIBW_ARCHS_MACOS: universal2
          CIBW_BEFORE_BUILD: >
            rustup default nightly-2024-11-03 &&
            rustup show
          CIBW_BEFORE_BUILD_MACOS: >
            rustup default nightly-2024-11-03 &&
            rustup target add aarch64-apple-darwin &&
            rustup target add x86_64-apple-darwin &&
            rustup show
          # manylinux2014 uses centOS 7 (yum install)
          # musllinux_1_2 uses Alpine Linux 3.19 (apk add)
          CIBW_BEFORE_BUILD_LINUX: >
            if command -v apt > /dev/null; then apt install -y clang; elif command -v yum > /dev/null; then yum install -y llvm-toolset-7.0; elif command -v apk > /dev/null; then apk add clang17-libclang; fi &&
            curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=nightly-2024-11-03 --profile=minimal -y &&
            . "$HOME/.cargo/env" &&
            rustup show

      - name: list wheel files
        run: ${{ matrix.ls || 'ls -lh' }} wheelhouse/

      - name: twine check
        run: twine check wheelhouse/*
      
      - name: install wheel for testing (Ubuntu)
        if: matrix.os == 'ubuntu'
        run: python -m pip install -U wheelhouse/*.manylinux2014_x86_64.whl

      - name: install wheel for testing (non Ubuntu)
        if: matrix.os != 'ubuntu'
        run: python -m pip install -U wheelhouse/*.whl

      - name: run Python test
        run: pytest tests/python

      - uses: actions/upload-artifact@v3
        with:
          path: wheelhouse/*.whl

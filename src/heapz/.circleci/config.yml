version: 2.1

orbs:
  rust: circleci/rust@1.6.0

executors:
  rust-app:
    environment:
      PIPELINE_NUM: << pipeline.number >>
      TZ: "America/Los_Angeles"
    docker:
      - image: cimg/rust:1.62.1

  ubuntu:
    environment:
      PIPELINE_NUM: << pipeline.number >>
      TZ: "America/Los_Angeles"
    machine:
      image: ubuntu-2004:2022.07.1
      docker_layer_caching: true

workflows:
  ci-cd:
    jobs:
      - check_formatting
      - check_wasm_support
      - build
      - test:
          requires:
            - build
      - benchmark:
          requires:
            - build
      - publish:
          filters:
            branches:
              only: main
          requires:
            - check_formatting
            - check_wasm_support
            - build
            - test
      - check_version:
          filters:
            branches:
              ignore:
                - main

jobs:
  benchmark:
    executor: rust-app
    environment:
      MASTER_BRANCH_URL: git@github.com:Ruddickmg/heapz.git
    steps:
      - checkout
      - run:
          name: Checkout Master
          command: git clone "$MASTER_BRANCH_URL"
      - restore_cache:
          key: dependency-cache-{{ checksum "Cargo.lock" }}
      - restore_cache:
          key: benchmark-cache-{{ checksum "heapz/Cargo.lock" }}
      - run:
          name: run benchmarks
          command: cargo bench
      - save_cache:
          key: benchmark-cache-{{ checksum "Cargo.lock" }}
          paths:
            - "./target/criterion"

  publish:
    executor: rust-app
    steps:
      - checkout
      - run:
          name: Login to crates.io
          command: cargo login
      - run:
          name: Verify publish will work
          command: cargo publish --dry-run
      - run:
          name: Publish
          command: cargo publish

  build:
    executor: rust-app
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "Cargo.lock" }}
      - run:
          name: Stable Build
          command: cargo build
      - save_cache:
          key: dependency-cache-{{ checksum "Cargo.lock" }}
          paths:
            - "~/.cargo"
            - "./target"

  check_wasm_support:
    executor: rust-app
    steps:
      - checkout
      - run:
          name: Add wasm target
          command: rustup target add wasm32-unknown-unknown
      - run:
          name: Verify code can be built in wasm
          command: cargo check --target wasm32-unknown-unknown

  check_version:
    executor: ubuntu
    environment:
      MASTER_BRANCH_URL: git@github.com:Ruddickmg/heapz.git
    steps:
      - checkout
      - run:
          name: Checkout Master
          command: git clone "$MASTER_BRANCH_URL"
      - run:
          name: Check that version has changed
          command: |
            export MASTER_VERSION="$(cat ./heapz/Cargo.toml | grep -oP '^version = "\K[^"]+')"
            export BRANCH_VERSION="$(cat ./Cargo.toml | grep -oP '^version = "\K[^"]+')"
            if [ "$MASTER_VERSION" = "$BRANCH_VERSION" ]; then exit 1; else exit 0; fi

  check_formatting:
    executor: rust-app
    steps:
      - checkout
      - run:
          name: Check formatting
          command: cargo fmt -- --check

  test:
    executor: rust-app
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "Cargo.lock" }}
      - run:
          name: test
          command: cargo test
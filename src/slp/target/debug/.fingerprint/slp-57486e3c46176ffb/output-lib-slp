{"message":"needless `fn main` in doctest","code":{"code":"clippy::needless_doctest_main","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":157,"byte_end":1150,"line_start":8,"line_end":38,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"//! fn main() {","highlight_start":5,"highlight_end":16},{"text":"//!     use slp::*;","highlight_start":1,"highlight_end":20},{"text":"//!     use slp::Rational64;","highlight_start":1,"highlight_end":29},{"text":"//!     use slp::Solution;","highlight_start":1,"highlight_end":27},{"text":"//!     let input = \"","highlight_start":1,"highlight_end":22},{"text":"//!         vars x1>=0, x2>=0","highlight_start":1,"highlight_end":30},{"text":"//!         max 2x1+3x2","highlight_start":1,"highlight_end":24},{"text":"//!         subject to","highlight_start":1,"highlight_end":23},{"text":"//!             2x1 +  x2 <= 18,","highlight_start":1,"highlight_end":33},{"text":"//!             6x1 + 5x2 <= 60,","highlight_start":1,"highlight_end":33},{"text":"//!             2x1 + 5x2 <= 40","highlight_start":1,"highlight_end":32},{"text":"//!         \";","highlight_start":1,"highlight_end":15},{"text":"//!     let mut solver = Solver::<Rational64>::new(&input);","highlight_start":1,"highlight_end":60},{"text":"//!     let solution = solver.solve();","highlight_start":1,"highlight_end":39},{"text":"//!     assert_eq!(solution, Solution::Optimal(Rational64::from_integer(28), vec![","highlight_start":1,"highlight_end":83},{"text":"//!         Rational64::from_integer(5),","highlight_start":1,"highlight_end":41},{"text":"//!         Rational64::from_integer(6)","highlight_start":1,"highlight_end":40},{"text":"//!     ]));","highlight_start":1,"highlight_end":13},{"text":"//!     match solution {","highlight_start":1,"highlight_end":25},{"text":"//!         Solution::Infeasible => println!(\"INFEASIBLE\"),","highlight_start":1,"highlight_end":60},{"text":"//!         Solution::Unbounded => println!(\"UNBOUNDED\"),","highlight_start":1,"highlight_end":58},{"text":"//!         Solution::Optimal(obj, model) => {","highlight_start":1,"highlight_end":47},{"text":"//!             println!(\"OPTIMAL {}\", obj);","highlight_start":1,"highlight_end":45},{"text":"//!             print!(\"SOLUTION\");","highlight_start":1,"highlight_end":36},{"text":"//!             for v in model {","highlight_start":1,"highlight_end":33},{"text":"//!                 print!(\" {}\", v);","highlight_start":1,"highlight_end":38},{"text":"//!             }","highlight_start":1,"highlight_end":18},{"text":"//!             println!();","highlight_start":1,"highlight_end":28},{"text":"//!         }","highlight_start":1,"highlight_end":14},{"text":"//!     }","highlight_start":1,"highlight_end":10},{"text":"//! }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_doctest_main","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::needless_doctest_main)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: needless `fn main` in doctest\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:8:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m//! fn main() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m_____^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m//!     use slp::*;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m//!     use slp::Rational64;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m//!     use slp::Solution;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m//!     }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m//! }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[33m|_____^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_doctest_main\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::needless_doctest_main)]` on by default\u001b[0m\n\n"}
{"message":"the `Err`-variant returned from this function is very large","code":{"code":"clippy::result_large_err","explanation":null},"level":"warning","spans":[{"file_name":"src/parser/mod.rs","byte_start":1337,"byte_end":1370,"line_start":66,"line_end":66,"column_start":44,"column_end":77,"is_primary":true,"text":[{"text":"pub fn parse_lp_problem<N>(input: &str) -> Result<LpProblem<N>, Error<Rule>>","highlight_start":44,"highlight_end":77}],"label":"the `Err`-variant is at least 272 bytes","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try reducing the size of `pest::error::Error<parser::lp_parser::Rule>`, for example by boxing large elements or replacing it with `Box<pest::error::Error<parser::lp_parser::Rule>>`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(clippy::result_large_err)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the `Err`-variant returned from this function is very large\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/parser/mod.rs:66:44\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m66\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn parse_lp_problem<N>(input: &str) -> Result<LpProblem<N>, Error<Rule>>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mthe `Err`-variant is at least 272 bytes\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: try reducing the size of `pest::error::Error<parser::lp_parser::Rule>`, for example by boxing large elements or replacing it with `Box<pest::error::Error<parser::lp_parser::Rule>>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(clippy::result_large_err)]` on by default\u001b[0m\n\n"}
{"message":"2 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 2 warnings emitted\u001b[0m\n\n"}
